cmake_minimum_required(VERSION 3.2)
include(FetchContent)
FetchContent_Declare(
  googletest
  # Specify the commit you depend on and update it regularly.
  URL https://github.com/google/googletest/archive/5376968f6948923e2411081fd9372e71a59d8e77.zip
)
# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(googletest)

# Now simply link against gtest or gtest_main as needed. Eg
add_executable(example example.cpp)
target_link_libraries(example gtest_main)
add_test(NAME example_test COMMAND example)

# add_executable(roge src/main.cpp)

#

# FIND_LIBRARY(libtcod_LIBRARIES NAMES libtcod libtcod.lib PATHS "./libs/libtcod-1.24.0-x86_64-msvc")
# FIND_PATH(libtcod_INCLUDE_DIRS libtcod.hpp "./include" )
# FIND_LIBRARY(sdl2_LIBRARIES NAMES SDL2 SDL2.DLL PATHS "./libs/libtcod-1.24.0-x86_64-msvc")

# INCLUDE_DIRECTORIES(${libtcod_INCLUDE_DIRS})
# TARGET_LINK_LIBRARIES(roge ${libtcod_LIBRARIES})
# TARGET_LINK_LIBRARIES(roge ${sdl2_LIBRARIES})


set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest")
